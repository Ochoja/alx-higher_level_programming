==================================
  Doctest for 7-base_geometry.py
==================================

``integer_validator(self, name, value)`` checks the value
of the argument passed and validates it.


 import and instance creation
===============================
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()



 Passing integers as value
============================
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)



 Passing other data types as value
====================================
String
>>> bg.integer_validator("width", "Hello")
Traceback (most recent call last):
	  ...
TypeError: width must be an integer


Float
>>> bg.integer_validator("distance", 45.86)
Traceback (most recent call last):
	  ...
TypeError: distance must be an integer


Data Structures
>>> bg.integer_validator("width", [2, 4, 6])
Traceback (most recent call last):
	  ...
TypeError: width must be an integer



  Passing value less than or equal to 0
=========================================
Zero
>>> bg.integer_validator("length", 0)
Traceback (most recent call last):
	  ...
ValueError: length must be greater than 0


Values less than Zero
>>> bg.integer_validator("length", -9)
Traceback (most recent call last):
	  ...
ValueError: length must be greater than 0



  Passing other data types as name
====================================
>>> bg.integer_validator(5, 9)
Traceback (most recent call last):
	  ...
TypeError: name must be a string
